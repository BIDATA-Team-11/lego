/*
 * This Java source file was generated by the Gradle 'init' task.
*/
package lego;

import lejos.robotics.RegulatedMotor;
import lejos.robotics.SampleProvider;
import lejos.hardware.Brick;
import lejos.hardware.BrickFinder;
import lejos.hardware.port.Port;

public class App {
public static void main (String[] args) throws Exception {
        Bil bil = new Bil();

        Brick brick = BrickFinder.getDefault();
        Port fargePort = brick.getPort("S2"); // fargesensor
        Port fargePortKorrigering = brick.getPort("S4"); // fargesensor

        Farge fargeSensor = new Farge(fargePort);
        Farge fargeKorrigering = new Farge(fargePortKorrigering);

        float svart = fargeSensor.kalibrering();
        // float hvit = fargeKorrigering.kalibrering();
        Thread.sleep(3000);

        float farge = 0;
        float fargeKorr = 0;

        int topSpeed = 200;
        int midSpeed = 100;
        int minSpeed = 50;
        int accTopSpeed = 6000;
        int accMinSpeed = 1000;

        bil.A.setSpeed(topSpeed);
        bil.C.setSpeed(topSpeed);

        bil.A.setAcceleration(accTopSpeed);
        bil.C.setAcceleration(accTopSpeed);

        while (true) {
            farge = fargeSensor.getFarge();
            fargeKorr = fargeKorrigering.getFarge();

            System.out.println("svart - hvit");
            if (farge > svart) {
                bil.A.setSpeed(midSpeed);
                bil.C.setSpeed(midSpeed);

                bil.A.setAcceleration(accMinSpeed);
                bil.C.setAcceleration(accMinSpeed);

                // Venstre
                if (fargeKorr > svart) {
                    bil.A.setSpeed(minSpeed);
                    while(farge < svart) {
                        farge = fargeSensor.getFarge();
                    }
                    System.out.println("Hvit - Hvit");

                    // HÃ¸yre
                } else if (fargeKorr < svart) {
                    bil.C.setSpeed(minSpeed);
                    while(farge < svart) {
                        farge = fargeSensor.getFarge();
                    }
                    System.out.println("Hvit - svart");
                }
            } else {
                bil.A.setAcceleration(accTopSpeed);
                bil.C.setAcceleration(accTopSpeed);

                bil.A.setSpeed(topSpeed);
                bil.C.setSpeed(topSpeed);
            }

            bil.A.forward();
            bil.C.forward();
        }
    }
}
